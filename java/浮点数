float:

1 bit表示：符号  SING
8 bit表示：2的指数 EXPONENT
23 bit 表示：小数部分 MANTISSA

1.234 

---------------------------
double:

1 bit表示：符号
11 bit表示：2的指数
52 bit 表示：小数部分
---------------------------------

16进制float 转 10进制

公式: SGL = (-1)*1.EXPONENT * 2^ (MANTISSA-127)

举例：

将0x40800000转换为10进制数，方法如下：

（1）先将16进制数转成二进制数01000000100000000000000000000000

（2）1位符号位(SIGN)=0 

（3）8位指数位(EXPONENT)=10000001=129[10进制] 

（4）23位尾数位(MANTISSA)=00000000000000000000000

（5）1.尾数=1.1 .00000000000000000000000=1.0000000[10进制]

（6）套入公式得SGL=(-1)^0*1.0000000*2^(129-127)=4

#-------------------------------------


Table 4.1. Floating-point value set parameters

Parameter	float	float-extended-exponent	double	double-extended-exponent

N     	24	24	     53	53
K	       8	≥ 11	   11	≥ 15
Emax	+127	≥ +1023	+1023	≥ +16383
Emin	-126	≤ -1022	-1022	≤ -16382

#----------------------------------------

在二进制文件中，存储数据的格式为16进制，

下面举例说明27.0f在二进制文件中怎么表示。

float
共计32位，折合4字节
由最高到最低位分别是第31、30、29、……、0位
31位是符号位，1表示该数为负，0反之。
30-23位，一共8位是指数位。
22-0位，一共23位是尾数位。
每8位分为一组，分成4组，分别是A组、B组、C组、D组。
每一组是一个字节，在内存中逆序存储，即：DCBA

27.0表示成二进制为：11011.0

用科学计数法表示为1.110110*2^4,现在我们要的尾数和指数都出来了。

尾数为：1101 10 （删除前面的第一个1，因为用科学计数法表示，二进制中第一个永远都为1，计算机在存储的时候就没有存储这个1，只存储小数点后面的位数）   不足23位，补0，就是1011 0000 0000 0000 0000 000（23位）

指数：为4 。一共8位，可以表示范围是0 ~ 255的无符号整数，也可以表示-128~127的有符号整数。但因为指数是可以为负的，所以为了统一把十进制的整数化为二进制时，都先加上127。

所以：4+127=131  变成二进制就是10000011

27.0用二进制表示就是：

加上第31位的符号位0

就是0100 0001 1101 1000 0000 0000 0000 0000

十六进制就是：41 D8 00 00

 

再看一个数27.5，二进制为11011.1

1.10111*2^4

尾数（小数点后的数）10111，补够23位 1011 1000 0000 0000 0000 000

指数：4，加上127，就是131，二进制1000 0011

用二进制表示就是 (符号数位1位)0 （指数位8位）1000 0011 （尾数位23位）1011 1000 0000 0000 0000 000

写成二进制标准形式：0100 0001 1101 1100 0000 0000 0000 0000

写成16进制就是41 DC 00 00
